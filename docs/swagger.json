{"swagger": "2.0", "info": {"title": "Researchment API", "description": "API for Researchment", "contact": {"email": "lordfirebcorps@gmail.com"}, "license": {"name": "BSD License"}, "version": "v1"}, "host": "localhost:8000", "schemes": ["http"], "basePath": "/api", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Token": {"type": "apiKey", "name": "Authorization", "in": "header"}, "Bearer": {"type": "apiKey", "name": "Authorization", "in": "header"}}, "security": [{"Bearer": []}, {"Token": []}], "paths": {"/accounts/change-email/{id}/": {"get": {"operationId": "accounts_change-email_read", "summary": "Change email", "description": "Effect the email change from the change link sent to the client's email", "parameters": [], "responses": {"200": {"description": "Email changed successfully!"}, "400": {"description": "Bad Request"}}, "tags": ["accounts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/accounts/change-password/{id}/": {"get": {"operationId": "accounts_change-password_read", "summary": "Change Password", "description": "Effect the password change from the change link sent to the                 client's email", "parameters": [], "responses": {"200": {"description": "Password changed successfully!"}, "400": {"description": "Bad Request"}}, "tags": ["accounts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/accounts/editpassword/": {"post": {"operationId": "accounts_editpassword_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/editprofile/": {"post": {"operationId": "accounts_editprofile_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/friends/suggested/": {"get": {"operationId": "accounts_friends_suggested_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/friends/{id}/": {"get": {"operationId": "accounts_friends_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["accounts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/accounts/friends/{id}/request/": {"post": {"operationId": "accounts_friends_request_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["accounts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/accounts/friends/{id}/{status}/": {"post": {"operationId": "accounts_friends_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["accounts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "status", "in": "path", "required": true, "type": "string"}]}, "/accounts/login/": {"post": {"operationId": "accounts_login_create", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenObtainPair"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenObtainPair"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/me/": {"get": {"operationId": "accounts_me_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/password-reset/{id}/": {"get": {"operationId": "accounts_password-reset_read", "summary": "Reset Password", "description": "Effect the password reset from the reset link sent to the                 client's email", "parameters": [], "responses": {"200": {"description": "password reset changed successfully!"}, "400": {"description": "Bad Request"}}, "tags": ["accounts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/accounts/refresh/": {"post": {"operationId": "accounts_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/request-email-change/": {"post": {"operationId": "accounts_request-email-change_create", "summary": "Request an email change", "description": "\nTo change the email, the user must first request an email change, this will create a \ntoken for the user, an email will be sent to the user which he will use to proceed with \nthe email change.\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["email"], "type": "object", "properties": {"email": {"description": "The new email", "type": "string"}}}}], "responses": {"200": {"description": "Email change request sent!"}, "400": {"description": "Bad Request"}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/request-password-change/": {"post": {"operationId": "accounts_request-password-change_create", "summary": "Request a password change", "description": "\nTo change the password, the user must first request a password change, this will create a \ntoken for the user, an email will be sent to the user which he will use to proceed with \nthe password change.\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["new_password", "old_password"], "type": "object", "properties": {"new_password": {"description": "The new password", "type": "string"}, "old_password": {"description": "The old password", "type": "string"}}}}], "responses": {"200": {"description": "Password change request sent!"}, "400": {"description": "Bad Request"}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/request-password-reset/": {"post": {"operationId": "accounts_request-password-reset_create", "summary": "Request password reset", "description": "\nTo reset the password, the user must first request a password reset,\nthe password reset requires both the user email and the new password, this will create a \ntoken for the user, an email will be sent to the user which he will use to proceed with \nthe password reset.\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["email", "new_password"], "type": "object", "properties": {"email": {"description": "The user's email", "type": "string"}, "new_password": {"description": "The new password", "type": "string"}}}}], "responses": {"200": {"description": "Password reset request sent!"}, "400": {"description": "Bad Request"}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/signup/": {"post": {"operationId": "accounts_signup_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["accounts"]}, "parameters": []}, "/chat/": {"get": {"operationId": "chat_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["chat"]}, "parameters": []}, "/chat/{id}/": {"get": {"operationId": "chat_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["chat"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/chat/{id}/send/": {"post": {"operationId": "chat_send_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["chat"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/chat/{user_pk}/get-or-create/": {"get": {"operationId": "chat_get-or-create_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["chat"]}, "parameters": [{"name": "user_pk", "in": "path", "required": true, "type": "string"}]}, "/feed/": {"get": {"operationId": "feed_list", "summary": "\nThe unified feed combines results from various models and returns them in a paginated format. \nThe response from the API contains the feed, page number, has_next, has_previous, and paginator_name.\nThe feed object contains the id, model_name, and created_at fields.\nThe model_name tells you what model it is fetched from so you can use the correct endpoint to fetch the full object.\nThis feed is peculiar in that it returns two different sets of feed, a default feed which contains personalized content\nand a support feed which comes when the default is exhausted, they have different paginator names and numbers so when \nhas_next is false for the default, you should check the first page for the support feed.\n", "description": "Unified feed", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["feed"]}, "parameters": []}, "/notifications/": {"get": {"operationId": "notifications_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["notifications"]}, "parameters": []}, "/notifications/read/{id}/": {"post": {"operationId": "notifications_read_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["notifications"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/": {"get": {"operationId": "posts_list", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Post"}}}}, "tags": ["posts"]}, "parameters": []}, "/posts/answers/": {"get": {"operationId": "posts_answers_list", "description": "\nGet answers to a question\nThe url should be in the format /answer/{question_id}/\nwhere question_id is the id of the question\n", "parameters": [], "responses": {"200": {"description": "List of answers"}}, "tags": ["posts"]}, "post": {"operationId": "posts_answers_create", "description": "\nAnswer a Question\nThe url should be in the format /answer/{question_id}/\nwhere question_id is the id of the question\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Answer"}}], "responses": {"200": {"description": "Answer added successfully"}}, "tags": ["posts"]}, "put": {"operationId": "posts_answers_update", "description": "\nUpdate an Answer\nThe url should be in the format /answer/{answer_id}/\nwhere answer_id is the id of the answer\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Answer"}}], "responses": {"200": {"description": "Answer updated successfully"}}, "tags": ["posts"]}, "delete": {"operationId": "posts_answers_delete", "description": "\nDelete an Answer\nThe url should be in the format /answer/{answer_id}/\nwhere answer_id is the id of the answer\n", "parameters": [], "responses": {"200": {"description": "Answer deleted successfully"}}, "tags": ["posts"]}, "parameters": []}, "/posts/answers/{id}/": {"get": {"operationId": "posts_answers_read", "description": "\nGet answers to a question\nThe url should be in the format /answer/{question_id}/\nwhere question_id is the id of the question\n", "parameters": [], "responses": {"200": {"description": "List of answers"}}, "tags": ["posts"]}, "post": {"operationId": "posts_answers_create", "description": "\nAnswer a Question\nThe url should be in the format /answer/{question_id}/\nwhere question_id is the id of the question\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Answer"}}], "responses": {"200": {"description": "Answer added successfully"}}, "tags": ["posts"]}, "put": {"operationId": "posts_answers_update", "description": "\nUpdate an Answer\nThe url should be in the format /answer/{answer_id}/\nwhere answer_id is the id of the answer\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Answer"}}], "responses": {"200": {"description": "Answer updated successfully"}}, "tags": ["posts"]}, "delete": {"operationId": "posts_answers_delete", "description": "\nDelete an Answer\nThe url should be in the format /answer/{answer_id}/\nwhere answer_id is the id of the answer\n", "parameters": [], "responses": {"200": {"description": "Answer deleted successfully"}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/articles/": {"get": {"operationId": "posts_articles_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Article"}}}}, "tags": ["posts"]}, "parameters": []}, "/posts/articles/create/": {"post": {"operationId": "posts_articles_create_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Article"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Article"}}}, "tags": ["posts"]}, "parameters": []}, "/posts/articles/owner/{id}/": {"get": {"operationId": "posts_articles_owner_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Article"}}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/articles/{id}/": {"get": {"operationId": "posts_articles_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Article"}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Article.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/articles/{id}/delete/": {"get": {"operationId": "posts_articles_delete_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Article"}}}, "tags": ["posts"]}, "delete": {"operationId": "posts_articles_delete_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Article.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/articles/{id}/edit/": {"get": {"operationId": "posts_articles_edit_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Article"}}}, "tags": ["posts"]}, "put": {"operationId": "posts_articles_edit_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Article"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Article"}}}, "tags": ["posts"]}, "patch": {"operationId": "posts_articles_edit_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Article"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Article"}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Article.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/books/": {"get": {"operationId": "posts_books_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Book"}}}}, "tags": ["posts"]}, "parameters": []}, "/posts/books/create/": {"post": {"operationId": "posts_books_create_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Book"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Book"}}}, "tags": ["posts"]}, "parameters": []}, "/posts/books/owner/{id}/": {"get": {"operationId": "posts_books_owner_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Book"}}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/books/{id}/": {"get": {"operationId": "posts_books_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Book"}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Book.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/books/{id}/delete/": {"get": {"operationId": "posts_books_delete_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Book"}}}, "tags": ["posts"]}, "delete": {"operationId": "posts_books_delete_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Book.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/books/{id}/edit/": {"get": {"operationId": "posts_books_edit_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Book"}}}, "tags": ["posts"]}, "put": {"operationId": "posts_books_edit_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Book"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Book"}}}, "tags": ["posts"]}, "patch": {"operationId": "posts_books_edit_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Book"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Book"}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Book.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/chapters/": {"get": {"operationId": "posts_chapters_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Chapter"}}}}, "tags": ["posts"]}, "parameters": []}, "/posts/chapters/create/": {"post": {"operationId": "posts_chapters_create_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Chapter"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Chapter"}}}, "tags": ["posts"]}, "parameters": []}, "/posts/chapters/owner/{id}/": {"get": {"operationId": "posts_chapters_owner_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Chapter"}}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/chapters/{id}/": {"get": {"operationId": "posts_chapters_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Chapter"}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Chapter.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/chapters/{id}/delete/": {"get": {"operationId": "posts_chapters_delete_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Chapter"}}}, "tags": ["posts"]}, "delete": {"operationId": "posts_chapters_delete_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Chapter.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/chapters/{id}/edit/": {"get": {"operationId": "posts_chapters_edit_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Chapter"}}}, "tags": ["posts"]}, "put": {"operationId": "posts_chapters_edit_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Chapter"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Chapter"}}}, "tags": ["posts"]}, "patch": {"operationId": "posts_chapters_edit_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Chapter"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Chapter"}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Chapter.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/conference-papers/": {"get": {"operationId": "posts_conference-papers_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ConferencePaper"}}}}, "tags": ["posts"]}, "parameters": []}, "/posts/conference-papers/create/": {"post": {"operationId": "posts_conference-papers_create_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ConferencePaper"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ConferencePaper"}}}, "tags": ["posts"]}, "parameters": []}, "/posts/conference-papers/owner/{id}/": {"get": {"operationId": "posts_conference-papers_owner_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ConferencePaper"}}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/conference-papers/{id}/": {"get": {"operationId": "posts_conference-papers_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ConferencePaper"}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conference Paper.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/conference-papers/{id}/delete/": {"get": {"operationId": "posts_conference-papers_delete_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ConferencePaper"}}}, "tags": ["posts"]}, "delete": {"operationId": "posts_conference-papers_delete_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conference Paper.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/conference-papers/{id}/edit/": {"get": {"operationId": "posts_conference-papers_edit_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ConferencePaper"}}}, "tags": ["posts"]}, "put": {"operationId": "posts_conference-papers_edit_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ConferencePaper"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ConferencePaper"}}}, "tags": ["posts"]}, "patch": {"operationId": "posts_conference-papers_edit_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ConferencePaper"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ConferencePaper"}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conference Paper.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/conference-posters/": {"get": {"operationId": "posts_conference-posters_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ConferencePoster"}}}}, "tags": ["posts"]}, "parameters": []}, "/posts/conference-posters/create/": {"post": {"operationId": "posts_conference-posters_create_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ConferencePoster"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ConferencePoster"}}}, "tags": ["posts"]}, "parameters": []}, "/posts/conference-posters/owner/{id}/": {"get": {"operationId": "posts_conference-posters_owner_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ConferencePoster"}}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/conference-posters/{id}/": {"get": {"operationId": "posts_conference-posters_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ConferencePoster"}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conference Poster.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/conference-posters/{id}/delete/": {"get": {"operationId": "posts_conference-posters_delete_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ConferencePoster"}}}, "tags": ["posts"]}, "delete": {"operationId": "posts_conference-posters_delete_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conference Poster.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/conference-posters/{id}/edit/": {"get": {"operationId": "posts_conference-posters_edit_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ConferencePoster"}}}, "tags": ["posts"]}, "put": {"operationId": "posts_conference-posters_edit_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ConferencePoster"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ConferencePoster"}}}, "tags": ["posts"]}, "patch": {"operationId": "posts_conference-posters_edit_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ConferencePoster"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ConferencePoster"}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conference Poster.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/contribution/{item_type}/{item_id}": {"get": {"operationId": "posts_contribution_read", "description": "\nGet contributions to a research item\nThe url should be in the format /contribution/{item_type}/{item_id}/\nwhere item_type is the type of the research item (art, bk, chp, cp, cpos, th)\n    and item_id is the id of the research item\n", "parameters": [], "responses": {"200": {"description": "List of contributions"}, "400": {"description": "Invalid item type"}}, "tags": ["posts"]}, "post": {"operationId": "posts_contribution_create", "description": "\nAdd contribution to a research item\nThe url should be in the format /contribution/{item_type}/{item_id}/\nwhere item_type is the type of the research item (art, bk, chp, cp, cpos, th)\n   and item_id is the id of the research item\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Contribution"}}], "responses": {"200": {"description": "Contribution added successfully"}, "400": {"description": "Invalid item type"}}, "tags": ["posts"]}, "put": {"operationId": "posts_contribution_update", "description": "\nUpdate contribution to a research item\nThe url should be in the format /contribution/{item_type}/{contribution_id}/\nwhere item_type is the type of the research item (art, bk, chp, cp, cpos, th)\n   and contribution_id is the id of the contribution\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Contribution"}}], "responses": {"200": {"description": "Contribution updated successfully"}, "400": {"description": "Invalid item type"}}, "tags": ["posts"]}, "delete": {"operationId": "posts_contribution_delete", "description": "\nDelete contribution to a research item\nThe url should be in the format /contribution/{item_type}/{contribution_id}/\nwhere item_type is the type of the research item (art, bk, chp, cp, cpos, th)\n    and contribution_id is the id of the contribution\n", "parameters": [], "responses": {"200": {"description": "Contribution deleted successfully"}, "400": {"description": "Invalid item type"}}, "tags": ["posts"]}, "parameters": [{"name": "item_type", "in": "path", "required": true, "type": "string"}, {"name": "item_id", "in": "path", "required": true, "type": "string"}]}, "/posts/create/": {"post": {"operationId": "posts_create_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["posts"]}, "parameters": []}, "/posts/like/{item_type}/{item_id}": {"post": {"operationId": "posts_like_create", "description": "\nLike a research item\nThe url should be in the format /like/{item_type}/{item_id}/\nwhere item_type is the type of the research item (article, book, chapter, conference-paper, conference-poster, thesis)\n    and item_id is the id of the research item\n", "parameters": [], "responses": {"200": {"description": "Research item liked successfully"}, "400": {"description": "Invalid item type"}}, "tags": ["posts"]}, "delete": {"operationId": "posts_like_delete", "description": "\nUnlike a research item\nThe url should be in the format /unlike/{item_type}/{item_id}/\nwhere item_type is the type of the research item (article, book, chapter, conference-paper, conference-poster, thesis)\n    and item_id is the id of the research item\n", "parameters": [], "responses": {"200": {"description": "Research item unliked successfully"}, "400": {"description": "Invalid item type"}}, "tags": ["posts"]}, "parameters": [{"name": "item_type", "in": "path", "required": true, "type": "string"}, {"name": "item_id", "in": "path", "required": true, "type": "string"}]}, "/posts/profile/{id}/": {"get": {"operationId": "posts_profile_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/project/": {"get": {"operationId": "posts_project_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["posts"]}, "post": {"operationId": "posts_project_create", "description": "Add a Project, the project attachments should be passed with name images for images and document for other files, multiple file uploads are permitted", "parameters": [{"name": "title", "in": "formData", "required": true, "type": "string", "maxLength": 255, "minLength": 1}, {"name": "objective", "in": "formData", "required": true, "type": "string", "minLength": 1}, {"name": "like_count", "in": "formData", "required": false, "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, {"name": "creator", "in": "formData", "required": true, "type": "string", "format": "uuid"}, {"name": "contributors", "in": "formData", "required": true, "type": "array", "items": {"type": "string", "format": "uuid"}, "uniqueItems": true}], "responses": {"200": {"description": "Project added successfully"}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["posts"]}, "put": {"operationId": "posts_project_update", "description": "\nUpdate a Project\nThe url should be in the format /project/{project_id}/\nwhere project_id is the id of the project\n", "parameters": [{"name": "title", "in": "formData", "required": true, "type": "string", "maxLength": 255, "minLength": 1}, {"name": "objective", "in": "formData", "required": true, "type": "string", "minLength": 1}, {"name": "like_count", "in": "formData", "required": false, "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, {"name": "creator", "in": "formData", "required": true, "type": "string", "format": "uuid"}, {"name": "contributors", "in": "formData", "required": true, "type": "array", "items": {"type": "string", "format": "uuid"}, "uniqueItems": true}], "responses": {"200": {"description": "Project updated successfully"}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["posts"]}, "delete": {"operationId": "posts_project_delete", "description": "\nDelete a Project\nThe url should be in the format /project/{project_id}/\nwhere project_id is the id of the project                            \n", "parameters": [], "responses": {"200": {"description": "Project deleted successfully"}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["posts"]}, "parameters": []}, "/posts/project/{project_id}/": {"get": {"operationId": "posts_project_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["posts"]}, "post": {"operationId": "posts_project_create", "description": "Add a Project, the project attachments should be passed with name images for images and document for other files, multiple file uploads are permitted", "parameters": [{"name": "title", "in": "formData", "required": true, "type": "string", "maxLength": 255, "minLength": 1}, {"name": "objective", "in": "formData", "required": true, "type": "string", "minLength": 1}, {"name": "like_count", "in": "formData", "required": false, "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, {"name": "creator", "in": "formData", "required": true, "type": "string", "format": "uuid"}, {"name": "contributors", "in": "formData", "required": true, "type": "array", "items": {"type": "string", "format": "uuid"}, "uniqueItems": true}], "responses": {"200": {"description": "Project added successfully"}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["posts"]}, "put": {"operationId": "posts_project_update", "description": "\nUpdate a Project\nThe url should be in the format /project/{project_id}/\nwhere project_id is the id of the project\n", "parameters": [{"name": "title", "in": "formData", "required": true, "type": "string", "maxLength": 255, "minLength": 1}, {"name": "objective", "in": "formData", "required": true, "type": "string", "minLength": 1}, {"name": "like_count", "in": "formData", "required": false, "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, {"name": "creator", "in": "formData", "required": true, "type": "string", "format": "uuid"}, {"name": "contributors", "in": "formData", "required": true, "type": "array", "items": {"type": "string", "format": "uuid"}, "uniqueItems": true}], "responses": {"200": {"description": "Project updated successfully"}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["posts"]}, "delete": {"operationId": "posts_project_delete", "description": "\nDelete a Project\nThe url should be in the format /project/{project_id}/\nwhere project_id is the id of the project                            \n", "parameters": [], "responses": {"200": {"description": "Project deleted successfully"}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["posts"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/posts/questions/": {"get": {"operationId": "posts_questions_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["posts"]}, "post": {"operationId": "posts_questions_create", "description": "Ask a Question", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Question"}}], "responses": {"200": {"description": "Question added successfully"}}, "tags": ["posts"]}, "put": {"operationId": "posts_questions_update", "description": "Update a Question", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Question"}}], "responses": {"200": {"description": "Question updated successfully"}}, "tags": ["posts"]}, "delete": {"operationId": "posts_questions_delete", "description": "Delete a Question", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Question"}}], "responses": {"200": {"description": "Question deleted successfully"}}, "tags": ["posts"]}, "parameters": []}, "/posts/questions/{id}/": {"get": {"operationId": "posts_questions_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["posts"]}, "post": {"operationId": "posts_questions_create", "description": "Ask a Question", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Question"}}], "responses": {"200": {"description": "Question added successfully"}}, "tags": ["posts"]}, "put": {"operationId": "posts_questions_update", "description": "Update a Question", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Question"}}], "responses": {"200": {"description": "Question updated successfully"}}, "tags": ["posts"]}, "delete": {"operationId": "posts_questions_delete", "description": "Delete a Question", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Question"}}], "responses": {"200": {"description": "Question deleted successfully"}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/theses/": {"get": {"operationId": "posts_theses_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Thesis"}}}}, "tags": ["posts"]}, "parameters": []}, "/posts/theses/create/": {"post": {"operationId": "posts_theses_create_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Thesis"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Thesis"}}}, "tags": ["posts"]}, "parameters": []}, "/posts/theses/owner/{id}/": {"get": {"operationId": "posts_theses_owner_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Thesis"}}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/theses/{id}/": {"get": {"operationId": "posts_theses_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Thesis"}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Thesis.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/theses/{id}/delete/": {"get": {"operationId": "posts_theses_delete_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Thesis"}}}, "tags": ["posts"]}, "delete": {"operationId": "posts_theses_delete_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Thesis.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/theses/{id}/edit/": {"get": {"operationId": "posts_theses_edit_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Thesis"}}}, "tags": ["posts"]}, "put": {"operationId": "posts_theses_edit_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Thesis"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Thesis"}}}, "tags": ["posts"]}, "patch": {"operationId": "posts_theses_edit_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Thesis"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Thesis"}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Thesis.", "required": true, "type": "string", "format": "uuid"}]}, "/posts/trends/": {"get": {"operationId": "posts_trends_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["posts"]}, "parameters": []}, "/posts/unlike/{item_type}/{item_id}": {"post": {"operationId": "posts_unlike_create", "description": "\nLike a research item\nThe url should be in the format /like/{item_type}/{item_id}/\nwhere item_type is the type of the research item (article, book, chapter, conference-paper, conference-poster, thesis)\n    and item_id is the id of the research item\n", "parameters": [], "responses": {"200": {"description": "Research item liked successfully"}, "400": {"description": "Invalid item type"}}, "tags": ["posts"]}, "delete": {"operationId": "posts_unlike_delete", "description": "\nUnlike a research item\nThe url should be in the format /unlike/{item_type}/{item_id}/\nwhere item_type is the type of the research item (article, book, chapter, conference-paper, conference-poster, thesis)\n    and item_id is the id of the research item\n", "parameters": [], "responses": {"200": {"description": "Research item unliked successfully"}, "400": {"description": "Invalid item type"}}, "tags": ["posts"]}, "parameters": [{"name": "item_type", "in": "path", "required": true, "type": "string"}, {"name": "item_id", "in": "path", "required": true, "type": "string"}]}, "/posts/{id}/": {"get": {"operationId": "posts_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/{id}/comment/": {"post": {"operationId": "posts_comment_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/{id}/comment/edit/": {"post": {"operationId": "posts_comment_edit_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/{id}/delete/": {"delete": {"operationId": "posts_delete_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/{id}/edit": {"put": {"operationId": "posts_edit_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PostDetail"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PostDetail"}}}, "tags": ["posts"]}, "patch": {"operationId": "posts_edit_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PostDetail"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PostDetail"}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/{id}/like/": {"post": {"operationId": "posts_like_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/posts/{id}/report/": {"post": {"operationId": "posts_report_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/profiles/certification/": {"get": {"operationId": "profiles_certification_list", "description": "Get all certifications", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Certification"}}}}, "tags": ["profiles"]}, "post": {"operationId": "profiles_certification_create", "description": "Create a new certification\n It is important to add the id of the credential", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Certification"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Certification"}}}, "tags": ["profiles"]}, "put": {"operationId": "profiles_certification_update", "description": "Update a certification\n The url should be in the form of /certification/{credential_id}/", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Certification"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Certification"}}}, "tags": ["profiles"]}, "delete": {"operationId": "profiles_certification_delete", "description": "Delete a certification\n The url should be in the form of /certification/{credential_id}/", "parameters": [], "responses": {"204": {"description": "No Content"}}, "tags": ["profiles"]}, "parameters": []}, "/profiles/certification/{cid}/": {"get": {"operationId": "profiles_certification_read", "description": "Get all certifications", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Certification"}}}}, "tags": ["profiles"]}, "post": {"operationId": "profiles_certification_create", "description": "Create a new certification\n It is important to add the id of the credential", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Certification"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Certification"}}}, "tags": ["profiles"]}, "put": {"operationId": "profiles_certification_update", "description": "Update a certification\n The url should be in the form of /certification/{credential_id}/", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Certification"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Certification"}}}, "tags": ["profiles"]}, "delete": {"operationId": "profiles_certification_delete", "description": "Delete a certification\n The url should be in the form of /certification/{credential_id}/", "parameters": [], "responses": {"204": {"description": "No Content"}}, "tags": ["profiles"]}, "parameters": [{"name": "cid", "in": "path", "required": true, "type": "string"}]}, "/profiles/education/": {"get": {"operationId": "profiles_education_list", "description": "Get all education experiences", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Education"}}}}, "tags": ["profiles"]}, "post": {"operationId": "profiles_education_create", "description": "Create a new education experience", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Education"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Education"}}}, "tags": ["profiles"]}, "put": {"operationId": "profiles_education_update", "description": "Update an education experience\n The url should be in the form of /education/{id}/", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Education"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Education"}}}, "tags": ["profiles"]}, "delete": {"operationId": "profiles_education_delete", "description": "Delete an education experience\n The url should be in the form of /education/{id}/", "parameters": [], "responses": {"204": {"description": "No Content"}}, "tags": ["profiles"]}, "parameters": []}, "/profiles/education/{id}/": {"get": {"operationId": "profiles_education_read", "description": "Get all education experiences", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Education"}}}}, "tags": ["profiles"]}, "post": {"operationId": "profiles_education_create", "description": "Create a new education experience", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Education"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Education"}}}, "tags": ["profiles"]}, "put": {"operationId": "profiles_education_update", "description": "Update an education experience\n The url should be in the form of /education/{id}/", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Education"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Education"}}}, "tags": ["profiles"]}, "delete": {"operationId": "profiles_education_delete", "description": "Delete an education experience\n The url should be in the form of /education/{id}/", "parameters": [], "responses": {"204": {"description": "No Content"}}, "tags": ["profiles"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/profiles/interest/": {"get": {"operationId": "profiles_interest_list", "description": "Get all interests", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Interest"}}}}, "tags": ["profiles"]}, "post": {"operationId": "profiles_interest_create", "description": "Create a new interest", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Interest"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Interest"}}}, "tags": ["profiles"]}, "put": {"operationId": "profiles_interest_update", "description": "Update an interest\n The url should be in the form of /interest/{id}/", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Interest"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Interest"}}}, "tags": ["profiles"]}, "delete": {"operationId": "profiles_interest_delete", "description": "Delete an interest\n The url should be in the form of /interest/{id}/", "parameters": [], "responses": {"204": {"description": "No Content"}}, "tags": ["profiles"]}, "parameters": []}, "/profiles/interest/{id}/": {"get": {"operationId": "profiles_interest_read", "description": "Get all interests", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Interest"}}}}, "tags": ["profiles"]}, "post": {"operationId": "profiles_interest_create", "description": "Create a new interest", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Interest"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Interest"}}}, "tags": ["profiles"]}, "put": {"operationId": "profiles_interest_update", "description": "Update an interest\n The url should be in the form of /interest/{id}/", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Interest"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Interest"}}}, "tags": ["profiles"]}, "delete": {"operationId": "profiles_interest_delete", "description": "Delete an interest\n The url should be in the form of /interest/{id}/", "parameters": [], "responses": {"204": {"description": "No Content"}}, "tags": ["profiles"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/profiles/me/": {"get": {"operationId": "profiles_me_list", "description": "Get the profile of the current user", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Profile"}}}, "tags": ["profiles"]}, "put": {"operationId": "profiles_me_update", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["profiles"]}, "parameters": []}, "/profiles/membership/": {"get": {"operationId": "profiles_membership_list", "description": "Get all memberships", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Membership"}}}}, "tags": ["profiles"]}, "post": {"operationId": "profiles_membership_create", "description": "Create a new membership", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Membership"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Membership"}}}, "tags": ["profiles"]}, "put": {"operationId": "profiles_membership_update", "description": "Update a membership\n The url should be in the form of /membership/{id}/", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Membership"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Membership"}}}, "tags": ["profiles"]}, "delete": {"operationId": "profiles_membership_delete", "description": "Delete a membership\n The url should be in the form of /membership/{id}/", "parameters": [], "responses": {"204": {"description": "No Content"}}, "tags": ["profiles"]}, "parameters": []}, "/profiles/membership/{id}/": {"get": {"operationId": "profiles_membership_read", "description": "Get all memberships", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Membership"}}}}, "tags": ["profiles"]}, "post": {"operationId": "profiles_membership_create", "description": "Create a new membership", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Membership"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Membership"}}}, "tags": ["profiles"]}, "put": {"operationId": "profiles_membership_update", "description": "Update a membership\n The url should be in the form of /membership/{id}/", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Membership"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Membership"}}}, "tags": ["profiles"]}, "delete": {"operationId": "profiles_membership_delete", "description": "Delete a membership\n The url should be in the form of /membership/{id}/", "parameters": [], "responses": {"204": {"description": "No Content"}}, "tags": ["profiles"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/profiles/resume/": {"get": {"operationId": "profiles_resume_list", "description": "Get the resume of the current user", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Resume"}}}, "tags": ["profiles"]}, "post": {"operationId": "profiles_resume_create", "description": "Create a new resume", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Resume"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Resume"}}}, "tags": ["profiles"]}, "delete": {"operationId": "profiles_resume_delete", "description": "Delete a resume", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Resume"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Resume"}}}, "tags": ["profiles"]}, "parameters": []}, "/profiles/skill/": {"get": {"operationId": "profiles_skill_list", "description": "Get all skills", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Skill"}}}}, "tags": ["profiles"]}, "post": {"operationId": "profiles_skill_create", "description": "Create a new skill", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Skill"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Skill"}}}, "tags": ["profiles"]}, "put": {"operationId": "profiles_skill_update", "description": "Update a skill\n The url should be in the form of /skill/{id}/", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Skill"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Skill"}}}, "tags": ["profiles"]}, "delete": {"operationId": "profiles_skill_delete", "description": "Delete a skill\n The url should be in the form of /skill/{id}/", "parameters": [], "responses": {"204": {"description": "No Content"}}, "tags": ["profiles"]}, "parameters": []}, "/profiles/skill/{id}/": {"get": {"operationId": "profiles_skill_read", "description": "Get all skills", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Skill"}}}}, "tags": ["profiles"]}, "post": {"operationId": "profiles_skill_create", "description": "Create a new skill", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Skill"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Skill"}}}, "tags": ["profiles"]}, "put": {"operationId": "profiles_skill_update", "description": "Update a skill\n The url should be in the form of /skill/{id}/", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Skill"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Skill"}}}, "tags": ["profiles"]}, "delete": {"operationId": "profiles_skill_delete", "description": "Delete a skill\n The url should be in the form of /skill/{id}/", "parameters": [], "responses": {"204": {"description": "No Content"}}, "tags": ["profiles"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/profiles/work/": {"get": {"operationId": "profiles_work_list", "description": "Get all work experiences", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Work"}}}}, "tags": ["profiles"]}, "post": {"operationId": "profiles_work_create", "description": "Create a new work experience", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Work"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Work"}}}, "tags": ["profiles"]}, "put": {"operationId": "profiles_work_update", "description": "Update a work experience\n The url should be in the form of /work/{id}/", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Work"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Work"}}}, "tags": ["profiles"]}, "delete": {"operationId": "profiles_work_delete", "description": "Delete a work experience\n The url should be in the form of /work/{id}/", "parameters": [], "responses": {"204": {"description": "No Content"}}, "tags": ["profiles"]}, "parameters": []}, "/profiles/work/{id}/": {"get": {"operationId": "profiles_work_read", "description": "Get all work experiences", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Work"}}}}, "tags": ["profiles"]}, "post": {"operationId": "profiles_work_create", "description": "Create a new work experience", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Work"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Work"}}}, "tags": ["profiles"]}, "put": {"operationId": "profiles_work_update", "description": "Update a work experience\n The url should be in the form of /work/{id}/", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Work"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Work"}}}, "tags": ["profiles"]}, "delete": {"operationId": "profiles_work_delete", "description": "Delete a work experience\n The url should be in the form of /work/{id}/", "parameters": [], "responses": {"204": {"description": "No Content"}}, "tags": ["profiles"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/search/": {"get": {"operationId": "search_list", "description": "Search for books, chapters, conference papers, conference posters, theses, contributions, projects, and questions.", "parameters": [{"name": "q", "in": "query", "description": "Search query", "required": true, "type": "string"}], "responses": {"200": {"description": "OK"}}, "tags": ["search"]}, "parameters": []}}, "definitions": {"TokenObtainPair": {"required": ["username", "password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true, "minLength": 1}}}, "User": {"required": ["email"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 60, "minLength": 1}, "username": {"title": "Username", "type": "string", "maxLength": 30, "minLength": 1}, "ally_count": {"title": "Ally count", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "posts_count": {"title": "Posts count", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "get_avatar": {"title": "Get avatar", "type": "string", "readOnly": true}}}, "PostAttachment": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "get_image": {"title": "Get image", "type": "string", "readOnly": true}}}, "Post": {"required": ["tags"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "body": {"title": "Body", "type": "string", "x-nullable": true}, "is_private": {"title": "Is private", "type": "boolean"}, "likes_count": {"title": "Likes count", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "comments_count": {"title": "Comments count", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "created_by": {"$ref": "#/definitions/User"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "attachments": {"type": "array", "items": {"$ref": "#/definitions/PostAttachment"}, "readOnly": true}, "tags": {"type": "array", "items": {"type": "string", "minLength": 1}}}}, "Answer": {"required": ["answer"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "question": {"title": "Question", "type": "string", "format": "uuid", "readOnly": true}, "answer": {"title": "Answer", "type": "string", "minLength": 1}, "created_by": {"title": "Created by", "type": "string", "format": "uuid", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "like_count": {"title": "Like count", "type": "integer", "readOnly": true}, "model_name": {"title": "Model name", "type": "string", "readOnly": true, "minLength": 1}}}, "Article": {"required": ["author_list", "title", "publication_date", "publication_type", "journal", "doi", "abstract", "doi_url", "posted_by"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "author_list": {"type": "array", "items": {"type": "string", "minLength": 1}}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "publication_date": {"title": "Publication date", "type": "string", "format": "date"}, "publication_type": {"title": "Publication type", "type": "string", "enum": ["art", "bk", "chp", "conf", "post", "pre", "thesis"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "like_count": {"title": "Like count", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "journal": {"title": "Journal", "type": "string", "maxLength": 255, "minLength": 1}, "doi": {"title": "Doi", "type": "string", "maxLength": 255, "minLength": 1}, "abstract": {"title": "Abstract", "type": "string", "minLength": 1}, "doi_url": {"title": "Doi url", "type": "string", "format": "uri", "maxLength": 200, "minLength": 1}, "file_payload": {"title": "File", "type": "string", "x-nullable": true}, "graphic_abstract": {"title": "Image", "type": "string", "x-nullable": true}, "model_name": {"title": "Model name", "type": "string", "readOnly": true, "minLength": 1}, "posted_by": {"title": "Posted by", "type": "string", "format": "uuid"}, "authors": {"type": "array", "items": {"type": "string", "format": "uuid"}, "uniqueItems": true}}}, "Book": {"required": ["author_list", "title", "publication_date", "publication_type", "publisher", "isbn", "abstract", "preface", "posted_by"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "author_list": {"type": "array", "items": {"type": "string", "minLength": 1}}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "publication_date": {"title": "Publication date", "type": "string", "format": "date"}, "publication_type": {"title": "Publication type", "type": "string", "enum": ["art", "bk", "chp", "conf", "post", "pre", "thesis"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "like_count": {"title": "Like count", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "publisher": {"title": "Publisher", "type": "string", "maxLength": 255, "minLength": 1}, "isbn": {"title": "Isbn", "type": "string", "maxLength": 255, "minLength": 1}, "abstract": {"title": "Abstract", "type": "string", "minLength": 1}, "file_payload": {"title": "File", "type": "string", "x-nullable": true}, "preface": {"title": "Preface", "type": "string", "minLength": 1}, "model_name": {"title": "Model name", "type": "string", "readOnly": true, "minLength": 1}, "posted_by": {"title": "Posted by", "type": "string", "format": "uuid"}, "authors": {"type": "array", "items": {"type": "string", "format": "uuid"}, "uniqueItems": true}}}, "Chapter": {"required": ["author_list", "title", "publication_date", "publication_type", "book_title", "abstract", "doi", "doi_url", "posted_by"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "author_list": {"type": "array", "items": {"type": "string", "minLength": 1}}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "publication_date": {"title": "Publication date", "type": "string", "format": "date"}, "publication_type": {"title": "Publication type", "type": "string", "enum": ["art", "bk", "chp", "conf", "post", "pre", "thesis"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "like_count": {"title": "Like count", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "book_title": {"title": "Book title", "type": "string", "maxLength": 255, "minLength": 1}, "abstract": {"title": "Abstract", "type": "string", "minLength": 1}, "file_payload": {"title": "File", "type": "string", "x-nullable": true}, "doi": {"title": "Doi", "type": "string", "maxLength": 255, "minLength": 1}, "doi_url": {"title": "Doi url", "type": "string", "format": "uri", "maxLength": 200, "minLength": 1}, "model_name": {"title": "Model name", "type": "string", "readOnly": true, "minLength": 1}, "posted_by": {"title": "Posted by", "type": "string", "format": "uuid"}, "authors": {"type": "array", "items": {"type": "string", "format": "uuid"}, "uniqueItems": true}}}, "ConferencePaper": {"required": ["author_list", "title", "publication_date", "publication_type", "conference_name", "conference_host", "conference_location", "conference_date", "abstract", "posted_by"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "author_list": {"type": "array", "items": {"type": "string", "minLength": 1}}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "publication_date": {"title": "Publication date", "type": "string", "format": "date"}, "publication_type": {"title": "Publication type", "type": "string", "enum": ["art", "bk", "chp", "conf", "post", "pre", "thesis"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "like_count": {"title": "Like count", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "conference_name": {"title": "Conference name", "type": "string", "maxLength": 255, "minLength": 1}, "conference_host": {"title": "Conference host", "type": "string", "maxLength": 255, "minLength": 1}, "conference_location": {"title": "Conference location", "type": "string", "maxLength": 255, "minLength": 1}, "conference_date": {"title": "Conference date", "type": "string", "format": "date"}, "abstract": {"title": "Abstract", "type": "string", "minLength": 1}, "file_payload": {"title": "File", "type": "string", "x-nullable": true}, "model_name": {"title": "Model name", "type": "string", "readOnly": true, "minLength": 1}, "posted_by": {"title": "Posted by", "type": "string", "format": "uuid"}, "authors": {"type": "array", "items": {"type": "string", "format": "uuid"}, "uniqueItems": true}}}, "ConferencePoster": {"required": ["author_list", "title", "publication_date", "publication_type", "conference_name", "conference_host", "conference_location", "conference_date", "abstract", "posted_by"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "author_list": {"type": "array", "items": {"type": "string", "minLength": 1}}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "publication_date": {"title": "Publication date", "type": "string", "format": "date"}, "publication_type": {"title": "Publication type", "type": "string", "enum": ["art", "bk", "chp", "conf", "post", "pre", "thesis"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "like_count": {"title": "Like count", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "conference_name": {"title": "Conference name", "type": "string", "maxLength": 255, "minLength": 1}, "conference_host": {"title": "Conference host", "type": "string", "maxLength": 255, "minLength": 1}, "conference_location": {"title": "Conference location", "type": "string", "maxLength": 255, "minLength": 1}, "conference_date": {"title": "Conference date", "type": "string", "format": "date"}, "abstract": {"title": "Abstract", "type": "string", "minLength": 1}, "file_payload": {"title": "File", "type": "string", "x-nullable": true}, "model_name": {"title": "Model name", "type": "string", "readOnly": true, "minLength": 1}, "posted_by": {"title": "Posted by", "type": "string", "format": "uuid"}, "authors": {"type": "array", "items": {"type": "string", "format": "uuid"}, "uniqueItems": true}}}, "Contribution": {"required": ["content_type", "body", "object_id", "made_by"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "content_type": {"title": "Content type", "type": "string"}, "body": {"title": "Body", "type": "string", "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "edited_at": {"title": "Edited at", "type": "string", "format": "date-time", "readOnly": true}, "object_id": {"title": "Object id", "type": "string", "format": "uuid"}, "like_count": {"title": "Like count", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "made_by": {"title": "Made by", "type": "string", "format": "uuid"}}}, "Question": {"required": ["question", "description", "asked_by"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "question": {"title": "Question", "type": "string", "maxLength": 1000, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "model_name": {"title": "Model name", "type": "string", "readOnly": true, "minLength": 1}, "asked_by": {"title": "Asked by", "type": "string", "format": "uuid"}}}, "Thesis": {"required": ["author_list", "title", "publication_date", "publication_type", "institution", "department", "degree", "abstract", "posted_by"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "author_list": {"type": "array", "items": {"type": "string", "minLength": 1}}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "publication_date": {"title": "Publication date", "type": "string", "format": "date"}, "publication_type": {"title": "Publication type", "type": "string", "enum": ["art", "bk", "chp", "conf", "post", "pre", "thesis"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "like_count": {"title": "Like count", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "institution": {"title": "Institution", "type": "string", "maxLength": 255, "minLength": 1}, "department": {"title": "Department", "type": "string", "maxLength": 255, "minLength": 1}, "degree": {"title": "Degree", "type": "string", "maxLength": 255, "minLength": 1}, "abstract": {"title": "Abstract", "type": "string", "minLength": 1}, "file_payload": {"title": "File", "type": "string", "x-nullable": true}, "model_name": {"title": "Model name", "type": "string", "readOnly": true, "minLength": 1}, "posted_by": {"title": "Posted by", "type": "string", "format": "uuid"}, "authors": {"type": "array", "items": {"type": "string", "format": "uuid"}, "uniqueItems": true}}}, "Comment": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "body": {"title": "Body", "type": "string", "x-nullable": true}, "created_by": {"$ref": "#/definitions/User"}, "created_at_formatted": {"title": "Created at formatted", "type": "string", "readOnly": true}}}, "PostDetail": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "body": {"title": "Body", "type": "string", "x-nullable": true}, "likes_count": {"title": "Likes count", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "comments_count": {"title": "Comments count", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "created_by": {"$ref": "#/definitions/User"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "comments": {"type": "array", "items": {"$ref": "#/definitions/Comment"}, "readOnly": true}, "attachments": {"type": "array", "items": {"$ref": "#/definitions/PostAttachment"}, "readOnly": true}}}, "Certification": {"required": ["title", "organization", "issued", "user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 100, "minLength": 1}, "organization": {"title": "Organization", "type": "string", "maxLength": 100, "minLength": 1}, "expires": {"title": "Expires", "type": "string", "format": "date", "x-nullable": true}, "issued": {"title": "Issued", "type": "string", "format": "date"}, "credential_id": {"title": "Credential id", "type": "string", "maxLength": 100, "minLength": 1, "x-nullable": true}, "credential_url": {"title": "Credential url", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "user": {"title": "User", "type": "string", "format": "uuid"}}}, "Education": {"required": ["course", "institution", "started", "degree", "user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "course": {"title": "Course", "type": "string", "maxLength": 100, "minLength": 1}, "institution": {"title": "Institution", "type": "string", "maxLength": 100, "minLength": 1}, "started": {"title": "Started", "type": "string", "format": "date"}, "ended": {"title": "Ended", "type": "string", "format": "date", "x-nullable": true}, "degree": {"title": "Degree", "type": "string", "maxLength": 100, "minLength": 1}, "country": {"title": "Country", "type": "string", "maxLength": 100, "minLength": 1, "x-nullable": true}, "user": {"title": "User", "type": "string", "format": "uuid"}}}, "Interest": {"required": ["name", "user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "user": {"title": "User", "type": "string", "format": "uuid"}}}, "Profile": {"required": ["user"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "bio": {"title": "Bio", "type": "string", "x-nullable": true}, "location": {"title": "Location", "type": "string", "maxLength": 100, "x-nullable": true}, "website": {"title": "Website", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "linkedin": {"title": "Linkedin", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "x": {"title": "X", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "facebook": {"title": "Facebook", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "date_of_birth": {"title": "Date of birth", "type": "string", "format": "date", "x-nullable": true}, "user": {"title": "User", "type": "string", "format": "uuid"}}}, "Membership": {"required": ["organisation", "level", "started", "user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "organisation": {"title": "Organisation", "type": "string", "maxLength": 100, "minLength": 1}, "level": {"title": "Level", "type": "string", "maxLength": 100, "minLength": 1}, "started": {"title": "Started", "type": "string", "format": "date"}, "ended": {"title": "Ended", "type": "string", "format": "date", "x-nullable": true}, "user": {"title": "User", "type": "string", "format": "uuid"}}}, "Resume": {"required": ["user"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "payload": {"title": "File", "type": "string", "x-nullable": true}, "uploaded": {"title": "Uploaded", "type": "string", "format": "date-time", "readOnly": true}, "user": {"title": "User", "type": "string", "format": "uuid"}}}, "Skill": {"required": ["name", "user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "proficiency": {"title": "Proficiency", "type": "string", "maxLength": 100, "minLength": 1, "x-nullable": true}, "experience": {"title": "Experience", "type": "string", "maxLength": 100, "minLength": 1, "x-nullable": true}, "user": {"title": "User", "type": "string", "format": "uuid"}}}, "Work": {"required": ["institution", "position", "started", "user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "institution": {"title": "Institution", "type": "string", "maxLength": 100, "minLength": 1}, "position": {"title": "Position", "type": "string", "maxLength": 100, "minLength": 1}, "role": {"title": "Role", "type": "string", "maxLength": 100, "x-nullable": true}, "started": {"title": "Started", "type": "string", "format": "date"}, "ended": {"title": "Ended", "type": "string", "format": "date", "x-nullable": true}, "current": {"title": "Current", "type": "boolean"}, "contract_type": {"title": "Contract type", "type": "string", "maxLength": 100, "x-nullable": true}, "department": {"title": "Department", "type": "string", "maxLength": 100}, "research_interest": {"title": "Research interest", "type": "string", "maxLength": 100}, "user": {"title": "User", "type": "string", "format": "uuid"}}}}}